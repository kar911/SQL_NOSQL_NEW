1. db.restaurant.find()
2.db.restaurant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1})
3.db.restaurant.find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})
4.db.restaurant.find({},{restaurant_id:1,name:1,borough:1,'address.zipcode':1,_id:0})
5. db.restaurant.find({borough:'Bronx'})
6.db.restaurant.find({borough:'Bronx'}).limit(5)
7.db.restaurant.find({borough:'Bronx'}).limit(5).skip(5).pretty
8.db.restaurant.find({'grades.score':{$gt:90}})
9. db.restaurant.find({'grades.score':{$gt:90,$lt:100}})
10.db.restaurant.find({'address.coord':{$lt:95.754168}})
11. db.restaurant.find({ cuisine:{$ne:'American'},'grades.score':{$gt:70},'address.coord.0':{$lt:-65.754168}})
12.db.restaurant.find({ cuisine:{$ne:'American'},'grades.score':{$gt:70},'address.coord.1':{$lt:65.754168}})
13.db.restaurant.find({cuisine:{$ne:'American'},'grades.grade':'A',borough:{$ne:'Brooklyn'}}).sort({cuisine:-1})
14.db.restaurant.find({name:{$regex:"^Will.*"}},{restaurant_id:1,name:1,borough:1,cuisine:1})
15.

16. db.resttaurant.find({name:{$regex:/.*reg.*/i}});
17. db.restaurant.find({borough:'Bronx',$or:[{cuisine:'American'},{cuisine:'Chinese'}]})
18. db.restaurant.find({borough:{$in:['Staten Island','Queens','Bronx','Brooklyn']}},{restaurant_id:1,name:1,borough:1,cuisine:1})
19. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which are not belonging to the borough Staten Island or Queens or Bronxor
Brooklyn.
 db.restaurant.find({borough:{$nin:['Staten Island','Queens','Bronx','Brooklyn']}},{restaurant_id:1,name:1,borough:1,cuisine:1})


20. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which achieved a score which is not more than 10.
db.restaurant.find({'grades.score':{$lte:10}},{restaurant_id:1,name:1,borough:1,cuisine:1})


21. Write a MongoDB query to find the restaurant Id, name, borough and cuisine for those
restaurants which prepared dish except 'American' and 'Chinees' or restaurant's name begins
with letter 'Wil'.

db.restaurant.find({cuisine:{$nin:['American','Chinese']},name:{$regex:"^Will.*"}},{restaurant_id:1,name:1,borough:1,cuisine:1})

22. Write a MongoDB query to find the restaurant Id, name, and grades for those restaurants
which achieved a grade of "A" and scored 11 on an ISODate "2014-08-11T00:00:00Z"
among many of survey dates

 db.restaurant.find({'grades.grade':'A','grades.score':11,'grades.date':ISODate("2014-08-11T00:00:00Z")},{restaurant_id:1,name:1,grades:1})

23. Write a MongoDB query to find the restaurant Id, name and grades for those restaurants
where the 2nd element of grades array contains a grade of "A" and score 9 on an ISODate
"2014-08-11T00:00:00Z".


24. Write a MongoDB query to find the restaurant Id, name, address and geographical
location for those restaurants where 2nd element of coord array contains a value which is
more than 42 and upto 52

db.restaurant.find({"address.coord.1":{$gt:42,$lt:52}},{restaurant_id:1,name:1,address:1})

25. Write a MongoDB query to arrange the name of the restaurants in ascending order along
with all the columns.

db.restaurant.find().sort({name:1}).skip(10000).limit(10);

26. Write a MongoDB query to arrange the name of the restaurants in descending along with
all the columns.

db.restaurant.find().sort({name:-1});

27. Write a MongoDB query to arranged the name of the cuisine in ascending order and for
that same cuisine borough should be in descending order.

db.restaurant.find().sort({cuisine:1},{borough:-1})

28. Write a MongoDB query to know whether all the addresses contains the street or not.

db.restaurant.find({"address.street":{ $exists : true } });
       
29. Write a MongoDB query which will select all documents in the restaurants collection
where the coord field value is Double.

db.restaurant.find({"address.coord":{$type:'double'}});

30. Write a MongoDB query which will select the restaurant Id, name and grades for those
restaurants which returns 0 as a remainder after dividing the score by 7.

db.restaurant.find({"grades.score":{$mod:[7,0]}},{restaurant_id:1,name:1,grades:1, _id:0});

31. Write a MongoDB query to find the restaurant name, borough, longitude and attitude and
cuisine for those restaurants which contains 'mon' as three letters somewhere in its name.

db.restaurant.find({Cuisine:{$regex:/.*mon.*/i}},{name:1,borough:1,"address.coord":1,cuisine:1}); //

32. Write a MongoDB query to find the restaurant name, borough, longitude and latitude and
cuisine for those restaurants which contain 'Mad' as first three letters of its name. 


db.restaurant.find({name:{$regex:/^Mad/}},{name:1,borough:1,address:1});////
